# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-11-09 23:51
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('activities', '0001_initial'),
    ]

    operations = [
        migrations.RunSQL('''

create materialized view
  activities_search
as select
  activities_activity.id
    as activity_id,
  setweight(to_tsvector('english', activities_activity.title), 'A') ||
  setweight(to_tsvector('english', activities_activity.description), 'B') ||
  setweight(to_tsvector('english', grouped_tags.tags), 'C') ||
  setweight(to_tsvector('english', activities_activity.text), 'D')
    as tsv
from
  activities_activity,
  (select
     activity_id,
     string_agg('. ', activities_tag.text) ||
     string_agg('! ', activities_tagsynonym.text) as tags
   from
     activities_activity_tags
       left outer join
        activities_tag on (activities_tag.id = activities_activity_tags.tag_id)
       left outer join
         activities_tag_synonyms on (activities_tag.id = activities_tag_synonyms.tag_id)
       left outer join
        activities_tagsynonym on (activities_tag_synonyms.tagsynonym_id = activities_tagsynonym.id)
   group by activity_id
  ) grouped_tags
where
  activities_activity.id = activity_id;

create table
  activities_search_dirty
(
  is_dirty boolean
);

create unique index activities_search_pkey on activities_search (activity_id);

create index activities_search_idx on activities_search using gin (tsv);

create or replace function activities_search_is_dirty()
returns trigger language plpgsql
as $$
begin
  insert into activities_search_dirty values (TRUE);
  return null;
end $$;

create or replace function update_activities_search()
returns void language plpgsql
as $$
begin
  delete from activities_search_dirty;
  if FOUND then
    refresh materialized view activities_search;
  end if;
end $$;

create trigger refresh_activities_search_activities_activity
after insert or update or delete or truncate
on activities_activity for each statement
execute procedure activities_search_is_dirty();

create trigger refresh_activities_search_activities_activity_tags
after insert or update or delete or truncate
on activities_activity_tags for each statement
execute procedure activities_search_is_dirty();

create trigger refresh_activities_search_activities_tag
after insert or update or delete or truncate
on activities_tag for each statement
execute procedure activities_search_is_dirty();

create trigger refresh_activities_search_activities_tag_synonyms
after insert or update or delete or truncate
on activities_tag_synonyms for each statement
execute procedure activities_search_is_dirty();

create trigger refresh_activities_search_activities_tagsynonym
after insert or update or delete or truncate
on activities_tagsynonym for each statement
execute procedure activities_search_is_dirty();

        '''),
    ]
